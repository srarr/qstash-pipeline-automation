# Production monitoring stack with free-tier quota tracking
services:
  prometheus:
    image: prom/prometheus:v2.52.0
    ports:
      - "9090:9090"
    volumes:
      - ./monitor/prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
    environment:
      - R2_ACCOUNT_ID=${R2_ACCOUNT_ID}
      - QSTASH_TOKEN=${QSTASH_TOKEN}
    networks: [cogv]

  grafana:
    image: grafana/grafana:11.0.0
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitor/grafana/provisioning:/etc/grafana/provisioning
      - ./monitor/grafana/dashboards:/var/lib/grafana/dashboards
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
    networks: [cogv]

  loki:
    image: grafana/loki:3.0.0
    ports:
      - "3100:3100"
    volumes:
      - ./monitor/loki:/etc/loki
      - loki_data:/loki
    command: -config.file=/etc/loki/local-config.yaml
    networks: [cogv]

  # Custom exporter for R2 and QStash metrics
  quota-exporter:
    build:
      context: ../monitor/quota-exporter
      dockerfile: Dockerfile
    ports:
      - "8081:8080"
    environment:
      - R2_ACCOUNT_ID=${R2_ACCOUNT_ID}
      - R2_KEY=${R2_KEY}
      - R2_SECRET=${R2_SECRET}
      - QSTASH_TOKEN=${QSTASH_TOKEN}
    networks: [cogv]

volumes:
  prometheus_data:
  grafana_data:
  loki_data:

networks:
  cogv: {}